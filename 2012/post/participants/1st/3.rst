=====================================
 PyCon JP 2012 参加レポート第1回 (3)
=====================================

*********************
 MongoDB with Python
*********************
Mathias Stearn 氏によるPython からMongoDB を扱う方法を解説するセッションです。Mathias Stearn 氏はMongoDB を開発している10gen のエンジニアで、彼自身MongoDB サーバーコアの開発やMongoDB のC++ ドライバーのメンテナンスを行なっています。

#########
 MongoDB
#########
MongoDB はリレーショナルでないデータベースで、JavaScript で操作し、データをJSON(正確にはBSONというバイナリ化されたJSONライクな表現方式)で表現します。

Python からMongoDB に接続するモジュールにpymongo があります。このセッションではこのpymongo の使い方の解説が主なテーマでした。

######
 CRUD
######
pymongo では、ドキュメントを表すためにPython のdict 型を使用します。pymongo の各種メソッドにこのdict を渡すことでCRUD を実現します。

###########
 MapReduce
###########
MongoDB では冒頭に書いたとおり、JavaScript で操作します。MapReduce も同様で、map, reduce 共にJavaScript の関数で定義します。pymongo からMapReduce を利用する場合も、JavaScript の関数を定義するコードを文字列としてpymongo に渡すことで行います。

#####
 ORM
#####
pymongo にORM の機能はありませんが、Python のclassmethod を利用することで、辞書ではなくオブジェクトとしてドキュメントを扱う事ができます。サンプルコードをMathias Stearn さんのスライドより引用します。::

    import pymongo
    conn # pymongo.Connection()
    db # conn['test']

    class Post:
        @classmethod
        def by_id(cls, id):
            p # cls()
            p.__dict__ # db.posts.find_one({'__id': id})
            return p

        def save(self):
            db.posts.save(self.__dict__)


筆者は自身で運営するサービスでMongoDB を利用していますが、このセッションの後半で主にMongoDB 自身の機能について知らない事が多く取り上げられ目から鱗でした。

######
 資料
######
* `YouTube 発表録画 <http://www.youtube.com/watch?v#Gd05QjkceH8>`_


*********************************************
 シンプルなシステム構成フレームワーク alnair
*********************************************
稲田 尚也氏によるセッションで、ご自身がPython で開発したサーバー構築ツールalnair(アルナイル) の解説でした。

####################
 サーバー構築ツール
####################
複数台のサーバーを構築する作業はとても面倒なものです。筆者も複数台のサーバーを運用しているためその苦労がよくわかります。この作業をなるべく自動化するツールとして稲田氏があげられたのが以下の3つ。

* Chef
* Puppet
* Kokki

しかし、これらには専用にサーバーを立てる必要や、Ruby を導入する必要等があり、それぞれに導入コストがかかります。

########
 alnair
########
稲田氏が製作したalnair では、作業マシンにPython が入っていれば、専用のサーバーを立てる必要も、インストール先のサーバーに事前準備を剃る必要もなくサーバーを構築することができます。

alnair の導入はalnair がPyPI に登録されているため、easy_install コマンドまたはpip コマンドによって導入することができます。

alnair は個々のパッケージ導入方法をレシピと呼び、このレシピを定義するファイルは標準的なPython スクリプトです。従って、Python を知っていれば新たに専用のDSL や複雑な設定を覚える必要はなく使い始めることができます。さらに、レシピにはPython からできるすべての操作を記述することができるので、導入が複雑なパッケージも自動で導入することができるそうです。

######
 資料
######
* `発表スライド <http://www.slideshare.net/naoina/alnair>`_
* `YouTube 発表録画 <http://www.youtube.com/watch?v#ZLcSnreXvj4>`_


**********
 次回予告
**********
次回はPyCon JP で行われたセッションの内、主にWeb 開発に関するものを取り上げる予定です。よろしくお願いします。
